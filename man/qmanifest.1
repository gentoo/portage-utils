.\" generated by mkman.py, please do NOT edit!
.TH qmanifest "1" "Jan 2024" "Gentoo Foundation" "qmanifest"
.SH NAME
qmanifest \- verify or generate thick Manifest files
.SH SYNOPSIS
.B qmanifest
\fI[opts] <misc args>\fR
.SH DESCRIPTION
\fIqmanifest\fR allows to verify or generate thick signed Manifests in
an ebuild tree.  By default, \fIqmanifest\fR will verify the main tree
as specified by Portage's configuration (one can check which using
\fIq\fR \fB-o\fR).  In this mode, it will output some information about
the GPG signature of the top-level Manifest file, and further reports on
any problems it encounters.
.P
This applet was originally a standalone program \fIhashgen\fR and its
alias \fIhashverify\fR.  Aliases for these names are still available for
historical reasons.  With the incorporation of \fIhashgen\fR in
\fBportage-utils\fR, development on the former has stopped in favour of
the latter.
.P
The arguments to \fIqmanifest\fR can be directories or names of
overlays.  By default, each argument is attempted to be matched against
all overlay names, and if that fails, treated as directory to presume a
tree is in.  This behaviour can be overridden with the \fB-d\fR and
\fB-o\fR flags to force treating the arguments as directories or
overlay names respectively.  Note that overlay names are those as
defined in \fIrepos.conf\fR from Portage's configuration.  The
\fIrepo_name\fR files from the overlays themselves (if present) are
ignored.
.P
This applet does similar things as \fIapp-portage/gemato\fR.  However,
the output and implemented strategies are completely different.  When
compiled with \fBUSE=openmp\fR, this applet will exploit parallelism
where possible to traverse a tree.  Should you want to limit the number
of parallel threads, export \fBOMP_NUM_THREADS\fR in your environment
with the desired maximum amount of threads in use by \fIqmanifest\fR.
.SH OPTIONS
.TP
\fB\-g\fR, \fB\-\-generate\fR
Generate thick Manifests.
.TP
\fB\-s\fR \fI<arg>\fR, \fB\-\-signas\fR \fI<arg>\fR
Sign generated Manifest using GPG key.  This key must exist in your
keyring and be valid for signing.
.TP
\fB\-p\fR, \fB\-\-passphrase\fR
Ask for GPG key password (instead of relying on gpg-agent).  While
this option is not very useful compared to gpg's ways of gathering a
password, it is mainly intended for automated setups where the
password is piped in using \fIstdin\fR.
.TP
\fB\-d\fR, \fB\-\-dir\fR
Treat arguments as directories.
.TP
\fB\-o\fR, \fB\-\-overlay\fR
Treat arguments as overlay names.
.TP
\fB\-\-root\fR \fI<arg>\fR
Set the ROOT env var.
.TP
\fB\-v\fR, \fB\-\-verbose\fR
Report full package versions, emit more elaborate output.
.TP
\fB\-q\fR, \fB\-\-quiet\fR
Tighter output; suppress warnings.
.TP
\fB\-C\fR, \fB\-\-nocolor\fR
Don't output color.
.TP
\fB\-\-color\fR
Force color in output.
.TP
\fB\-h\fR, \fB\-\-help\fR
Print this help and exit.
.TP
\fB\-V\fR, \fB\-\-version\fR
Print version and exit.
.SH "GENERATING A SIGNED TREE"
.PP
By default, \fBqmanifest\fR will not try to sign the top-level Manifest
when it generating thick Manifests.  A tree as such isn't completely
valid (as it misses the final signature), but still correct.  To sign
the top-level Manifest, the \fB-s\fR flag needs to be used to provide
the GPG keyid to sign with.  The passphrase is requested by \fBgpg\fR(1)
itself, unless the \fB-p\fR flag is given, in which case \fBqmanifest\fR
attempts to read the passphrase from \fIstdin\fR and then pass that
passphrase onto \fBgpg\fR.  This is useful for scenarios in which the
signing of a tree is scripted.
.PP
To generate a tree signed by GPG keyid \fI0x123567ABC\fR using
passphrase \fImypasswd\fR, one could use:
.nf\fI
	$ echo mypasswd | qmanifest -g -s 0x123567ABC -p /path/to/tree
.fi
.SH "REPORTING BUGS"
Please report bugs via http://bugs.gentoo.org/
.br
Product: Gentoo Linux; Component: Current packages
.SH AUTHORS
.nf
Ned Ludd <solar@gentoo.org>
Mike Frysinger <vapier@gentoo.org>
Fabian Groffen <grobian@gentoo.org>
.fi
.SH "SEE ALSO"
.BR q (1),
.BR qatom (1),
.BR qcheck (1),
.BR qdepends (1),
.BR qfile (1),
.BR qgrep (1),
.BR qkeyword (1),
.BR qlist (1),
.BR qlop (1),
.BR qmerge (1),
.BR qpkg (1),
.BR qsearch (1),
.BR qsize (1),
.BR qtbz2 (1),
.BR qtegrity (1),
.BR quse (1),
.BR qwhich (1),
.BR qxpak (1)
